[0m[[0minfo[0m] [0m[32mBoardSpec:[0m[0m
[0m[[0minfo[0m] [0m[32minitBoard[0m[0m
[0m[[0minfo[0m] [0m[32m- it shoudl return a List of the size indicated, from 1 to Dimension[0m[0m
[0m[[0minfo[0m] [0m[32mreturnRows[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a list of row lists[0m[0m
[0m[[0minfo[0m] [0m[32mreturnColumns[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a list of column lists[0m[0m
[0m[[0minfo[0m] [0m[32mreturnDiagonals[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a list of diagonal lists[0m[0m
[0m[[0minfo[0m] [0m[32mcheckSets[0m[0m
[0m[[0minfo[0m] [0m[32m- should return true if one list in a list of lists has identical values internally[0m[0m
[0m[[0minfo[0m] [0m[32m- should return return false if no list in a list of lists has identical values[0m[0m
[0m[[0minfo[0m] [0m[32m- should return true if there is a diagonal win[0m[0m
[0m[[0minfo[0m] [0m[32mcheckWin[0m[0m
[0m[[0minfo[0m] [0m[32m- should return true if a winning board[0m[0m
[0m[[0minfo[0m] [0m[32m- should return false if not a winning board[0m[0m
[0m[[0minfo[0m] [0m[32mcheckTie[0m[0m
[0m[[0minfo[0m] [0m[31m- should return false if there is a winner *** FAILED ***[0m[0m
[0m[[0minfo[0m] [0m[31m  true did not equal false (BoardSpec.scala:99)[0m[0m
[0m[[0minfo[0m] [0m[32mgameOver[0m[0m
[0m[[0minfo[0m] [0m[33m- should return a List[Boolean, String] (pending)[0m[0m
[0m[[0minfo[0m] [0m[33m- should return false if the game is not over (pending)[0m[0m
[0m[[0minfo[0m] [0m[33m- should return true if the game is over (pending)[0m[0m
[0m[[0minfo[0m] [0m[33m- should return 'tie' if a tie (pending)[0m[0m
[0m[[0minfo[0m] [0m[33m- should return 'X' if X is the winner (pending)[0m[0m
